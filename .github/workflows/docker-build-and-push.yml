name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main  # Trigger on push to main branch
    paths-ignore:
      - VERSION  # Ignore pushes that only modify the VERSION file
  workflow_dispatch:  # Allows manual trigger

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Extract and Increment Version
      - name: Increment Version
        id: version
        run: |
          # Extract current version or initialize to 0.0.0
          VERSION=$(cat VERSION || echo "0.0.0")
          # Split version into components
          MAJOR=$(echo "$VERSION" | cut -d. -f1)
          MINOR=$(echo "$VERSION" | cut -d. -f2)
          PATCH=$(echo "$VERSION" | cut -d. -f3)
          # Increment patch version
          NEW_VERSION="$MAJOR.$MINOR.$((PATCH + 1))"
          echo "New version: $NEW_VERSION"
          # Save new version to VERSION file
          echo "$NEW_VERSION" > VERSION
          echo "version=$NEW_VERSION" >> $GITHUB_ENV

      # Step 4: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 5: Build and tag the Docker image
      - name: Build Docker image
        run: |
          # Define ECR repository URI
          REPOSITORY_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/checkpoint-task"
          # Use incremented version from environment variable
          docker build -t "$REPOSITORY_URI:latest" -t "$REPOSITORY_URI:${{ env.version }}" .

      # Step 6: Push the Docker image to ECR
      - name: Push Docker image to Amazon ECR
        run: |
          # Define ECR repository URI
          REPOSITORY_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/checkpoint-task"
          # Push Docker image to ECR
          docker push "$REPOSITORY_URI:${{ env.version }}"

      # Step 7: Commit and Tag New Version
      - name: Commit and Tag New Version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add VERSION
          git commit -m "Increment version to ${{ env.version }}"
          git tag "v${{ env.version }}"
          git push origin main --tags

